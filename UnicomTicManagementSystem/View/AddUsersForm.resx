<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0o
        MCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCj/wAARCACgAJMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6
        oooooAKKKKACiiigAqjq+radotobrWL+0sLYdZbmZY1/NiBXifxx+P8AZeDpZ9E8LLDqGvJlJpmOYbQ+
        hx95x/d6Dv6V8e+J/Ems+KdTfUPEGo3F/dt/HM2Qo9FHRR7AAUAffcnxm+HcchRvFmnEg4+Usw/MDFam
        i/EnwXrdwkGmeJ9JnuHOFi+0qrsfQK2Ca/NmigD9U6K+CfhL8c/Efga5gtb6eXV9ABCvaTvueJfWJzyu
        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
        iigAooooAKKKKACiiigAooooAKKKKAP/2Q==
</value>
  </data>
</root>