<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0o
        MCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCj/wAARCADIALkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6
        pooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiisLxj4u0LwZpa6j4m1COwtHkESuys5ZiCcB
        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
</value>
  </data>
</root>